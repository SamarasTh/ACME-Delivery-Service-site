#CREATE
create.table.customer=\
  CREATE TABLE CUSTOMER (\
  id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY, \
  name VARCHAR2(100) NOT NULL ,\
  username VARCHAR2(100) NOT NULL,\
  password VARCHAR2(100) NOT NULL,\
  address VARCHAR2(100) NOT NULL,\
  email VARCHAR2(100) NOT NULL,\
  category VARCHAR(100) NOT NULL\
  )
create.table.product=\
  CREATE TABLE PRODUCT (\
  id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY ,\
  name VARCHAR2(100) NOT NULL ,\
  price NUMBER(10,2) NOT NULL, \
  type VARCHAR2(100) NOT NULL\
  )
create.table.order=\
  CREATE TABLE ORDER (\
  id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY, \
  date VARCHAR2(100), \
  status VARCHAR2(100), \
  amount NUMBER(10,2) \
  discount NUMBER(10,2) \
  payment_method VARCHAR2(100) \
  )
create.table.order_item=\
  CREATE TABLE ORDER_ITEM (\
  order_id  NUMBER NOT NULL,\
  product_id  NUMBER NOT NULL,\
  name VARCHAR2(100) NOT NULL ,\
  price NUMBER(10,2) NOT NULL, \
  type VARCHAR2(100) NOT NULL,\
  )

#DROP
drop.table.university=\
  DROP TABLE CUSTOMER PURGE
drop.table.department=\
  DROP TABLE ORDER PURGE
drop.table.student=\
  DROP TABLE ORDER_ITEM  PURGE
drop.table.unit=\
  DROP TABLE PRODUCT PURGE

#SELECT
select.table.customer.000=\
  SELECT * \
  FROM CUSTOMER
select.table.customer.001=\
  SELECT * \
  FROM CUSTOMER \
  WHERE id = ?
select.table.order.001=\
  SELECT * \
  FROM ORDER \
  WHERE id = ?
select.table.order_item.002=\
  SELECT * \
  FROM ORDER_ITEM \
  WHERE order_id = ?
select.table.order.002=\
  SELECT * \
  FROM ORDER \
  WHERE customer_id = ?
select.table.order.000=\
  SELECT * \
  FROM ORDER
select.table.product.000=\
  SELECT * \
  FROM PRODUCT
select.table.product.001=\
  SELECT * \
  FROM PRODUCT \
  WHERE id = ?
#select.table.order_item.002=\
#  SELECT * FROM ORDER_ITEM, ORDER \
#  WHERE customer_id = ? \
#  AND order_item.order_id = order.id


#INSERT
insert.table.customer.000=\
  INSERT INTO CUSTOMER(name) \
  VALUES (?)
insert.table.product.000=\
  INSERT INTO PRODUCT(price , name, price) \
  VALUES (?, ?, ?)
insert.table.unit.000=\
  INSERT INTO UNIT(name, tutor_name, department_id) \
  VALUES (?, ?, ?)
insert.table.student.000=\
  INSERT INTO CUSTOMER(name,username, password ,address, email , customer_category) \
  VALUES (?, ?, ?, ?, ? ,?)
insert.table.enrollment.000=\
  INSERT INTO ENROLLMENT(unit_id, grade, student_id) \
  VALUES (?, ?, ?)
#UPDATE

update.table.university.000=\
  UPDATE UNIVERSITY \
  SET name = ? \
  WHERE id = ?
update.table.department.000=\
  UPDATE DEPARTMENT \
  SET name = ?, \
  university_id = ? \
  WHERE id = ?
update.table.unit.000=\
  UPDATE UNIT \
  SET name = ?, \
  tutor_name = ?, \
  department_id = ? \
  WHERE id = ?
update.table.student.000=\
  UPDATE STUDENT \
  SET name = ?, \
  address = ?, \
  dateOfBirth = ? \
  WHERE id = ?
update.table.enrollment.000=\
  UPDATE ENROLLMENT \
  SET unit_id = ?, \
  grade = ?, \
  student_id = ? \
  WHERE id = ?
#DELETE
delete.table.university.000=\
  DELETE FROM UNIVERSITY \
  WHERE id = ?
delete.table.department.000=\
DELETE FROM DEPARTMENT \
  WHERE id = ?
delete.table.department.001=\
  DELETE FROM DEPARTMENT \
  WHERE university_id = ?
delete.table.unit.000=\
  DELETE FROM UNIT \
  WHERE id = ?
delete.table.unit.001=\
  DELETE FROM UNIT \
  WHERE department_id = ?
delete.table.student.000=\
  DELETE FROM STUDENT \
  WHERE id = ?
delete.table.enrollment.000=\
  DELETE FROM ENROLLMENT \
  WHERE id = ?
delete.table.enrollment.001=\
  DELETE FROM ENROLLMENT \
  WHERE student_id = ?
delete.table.enrollment.002=\
  DELETE FROM ENROLLMENT \
  WHERE unit_id = ?
#REPORTING
select.report.enrollment.000=\
  SELECT unit_id, COUNT(unit_id) frequency \
  FROM ENROLLMENT \
  GROUP BY unit_id \
  ORDER BY COUNT(unit_id) DESC \
  FETCH NEXT 5 ROWS ONLY
select.report.enrollment.001=\
  SELECT student_id, MAX(grade) highestGrade \
  FROM ENROLLMENT \
  GROUP BY student_id \
  ORDER BY highestGrade DESC \
  FETCH NEXT 5 ROWS ONLY
select.report.enrollment.002=\
  SELECT unit_id, AVG(grade) avgGrade \
  FROM ENROLLMENT \
  GROUP BY unit_id \
  ORDER BY avgGrade DESC \
  FETCH NEXT 5 ROWS ONLY
select.report.student.000=\
  SELECT result.department_id, SUM(result.frequency) sum \
  FROM( \
    SELECT enrollment.unit_id, unit.department_id, COUNT(enrollment.unit_id) frequency \
    FROM ENROLLMENT, UNIT \
    WHERE unit.id = enrollment.unit_id \
    GROUP BY unit.id, enrollment.unit_id, unit.department_id \
  ) result \
  GROUP BY result.department_id \
  ORDER BY sum DESC \
  FETCH NEXT 3 ROWS ONLY